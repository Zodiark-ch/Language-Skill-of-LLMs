[2024-07-25 09:01:48,471][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 0, the cut list of layer 0 is 
tensor([1., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,472][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 0, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,472][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 0, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,472][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 0, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,472][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 0, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,472][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 0, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,472][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 0, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,472][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 0, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,472][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 0, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,473][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 0, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,473][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 0, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,473][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 1, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0.,
        1., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,473][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 1, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,473][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 1, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,473][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 1, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,473][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 1, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,474][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 1, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,474][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 1, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,474][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 1, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,474][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 1, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,474][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 1, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,474][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 1, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,474][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 2, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,475][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 2, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,475][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 2, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,475][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 2, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,475][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 2, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,475][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 2, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,475][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 2, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,475][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 2, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,475][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 2, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,475][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 2, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,476][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 2, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,476][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 3, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,476][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 3, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,476][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 3, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,476][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 3, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,476][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 3, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,476][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 3, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,476][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 3, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,476][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 3, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,477][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 3, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,477][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 3, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,477][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 3, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,477][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 4, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,477][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 4, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,477][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 4, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,477][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 4, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,477][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 4, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,477][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 4, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,477][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 4, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,478][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 4, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,478][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 4, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,478][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 4, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,478][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 4, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,478][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 5, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1.,
        1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,478][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 5, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,478][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 5, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,478][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 5, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,478][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 5, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,479][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 5, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,479][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 5, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,479][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 5, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,479][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 5, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,479][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 5, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,479][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 5, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,479][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 6, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,479][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 6, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,479][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 6, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,479][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 6, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,480][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 6, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,480][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 6, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,480][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 6, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,480][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 6, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,480][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 6, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,480][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 6, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,480][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 6, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,480][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 7, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,480][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 7, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,480][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 7, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,481][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 7, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,481][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 7, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,481][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 7, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,481][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 7, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,481][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 7, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,481][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 7, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,481][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 7, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,481][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 7, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,481][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 8, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1.])
[2024-07-25 09:01:48,481][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 8, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,482][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 8, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,482][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 8, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,482][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 8, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,482][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 8, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,482][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 8, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,482][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 8, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,482][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 8, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,482][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 8, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,482][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 8, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,483][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 9, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,483][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 9, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,483][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 9, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,483][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 9, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,483][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 9, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,483][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 9, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,483][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 9, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,483][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 9, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,483][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 9, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,483][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 9, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,483][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 9, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,484][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 10, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 1.,
        1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1.])
[2024-07-25 09:01:48,484][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 10, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,484][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 10, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,484][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 10, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,484][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 10, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,484][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 10, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,484][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 10, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,484][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 10, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,484][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 10, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,484][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 10, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,485][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 10, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,485][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 11, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,485][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 11, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,485][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 11, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,485][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 11, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,485][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 11, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,485][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 11, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,485][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 11, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,485][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 11, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,485][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 11, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,486][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 11, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,486][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 11, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,486][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 12, the cut list of layer 0 is 
tensor([1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1.,
        0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1.])
[2024-07-25 09:01:48,486][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 12, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,486][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 12, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,486][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 12, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,486][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 12, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,486][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 12, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,486][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 12, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,486][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 12, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,487][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 12, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,487][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 12, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,487][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 12, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,487][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 13, the cut list of layer 0 is 
tensor([0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,487][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 13, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,487][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 13, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,487][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 13, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,487][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 13, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,487][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 13, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,487][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 13, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,488][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 13, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,488][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 13, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,488][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 13, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,488][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 13, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,488][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 14, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0.,
        1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,488][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 14, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,488][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 14, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,488][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 14, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,488][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 14, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,488][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 14, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,489][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 14, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,489][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 14, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,489][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 14, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,489][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 14, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,489][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 14, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,489][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 15, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1.])
[2024-07-25 09:01:48,489][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 15, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,489][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 15, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,489][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 15, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,489][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 15, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,490][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 15, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,490][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 15, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,490][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 15, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,490][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 15, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,490][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 15, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,490][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 15, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,490][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 16, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,490][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 16, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,490][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 16, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,490][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 16, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,491][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 16, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,491][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 16, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,491][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 16, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,491][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 16, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,491][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 16, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,491][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 16, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,491][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 16, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,491][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 17, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0.,
        0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1.])
[2024-07-25 09:01:48,491][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 17, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,491][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 17, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,492][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 17, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,492][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 17, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,492][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 17, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,492][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 17, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,492][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 17, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,492][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 17, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,492][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 17, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,492][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 17, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,492][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 18, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1.])
[2024-07-25 09:01:48,492][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 18, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,493][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 18, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,493][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 18, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,493][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 18, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,493][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 18, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,493][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 18, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,493][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 18, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,493][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 18, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,493][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 18, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,493][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 18, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,494][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 19, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,494][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 19, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,494][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 19, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,494][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 19, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,494][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 19, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,494][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 19, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,494][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 19, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,494][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 19, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,494][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 19, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,494][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 19, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,494][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 19, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,495][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 20, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,495][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 20, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,495][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 20, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,495][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 20, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,495][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 20, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,495][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 20, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,495][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 20, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,495][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 20, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,495][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 20, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,495][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 20, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,496][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 20, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,496][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 21, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0.,
        1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,496][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 21, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,496][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 21, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,496][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 21, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,496][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 21, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,496][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 21, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,496][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 21, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,496][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 21, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,497][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 21, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,497][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 21, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,497][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 21, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,497][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 22, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0.,
        0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1.])
[2024-07-25 09:01:48,497][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 22, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,497][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 22, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,497][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 22, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,497][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 22, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,497][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 22, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,497][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 22, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,497][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 22, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,498][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 22, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,498][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 22, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,498][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 22, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,498][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 23, the cut list of layer 0 is 
tensor([1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1.,
        1., 1., 1., 1., 0., 1., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,498][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 23, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,498][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 23, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,498][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 23, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,498][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 23, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,498][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 23, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,499][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 23, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,499][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 23, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,499][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 23, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,499][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 23, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,499][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 23, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,499][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 24, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1.,
        0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,499][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 24, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,499][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 24, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,499][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 24, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,499][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 24, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,500][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 24, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,500][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 24, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,500][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 24, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,500][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 24, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,500][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 24, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,500][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 24, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,500][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 25, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1.,
        0., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,500][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 25, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,500][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 25, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,500][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 25, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,501][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 25, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,501][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 25, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,501][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 25, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,501][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 25, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,501][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 25, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,501][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 25, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,501][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 25, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,501][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 26, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,501][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 26, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,501][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 26, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,501][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 26, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,502][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 26, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,502][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 26, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,502][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 26, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,502][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 26, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,502][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 26, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,502][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 26, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,502][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 26, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,502][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 27, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,502][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 27, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,502][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 27, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,502][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 27, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,503][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 27, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,503][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 27, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,503][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 27, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,503][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 27, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,503][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 27, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,503][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 27, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,503][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 27, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,503][satisfiability_discovery.py][line:102][INFO] ### for layer 1 and circuit 28, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,503][satisfiability_discovery.py][line:104][INFO] ### for layer 1 and circuit 28, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,503][satisfiability_discovery.py][line:105][INFO] ### for layer 1 and circuit 28, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,503][satisfiability_discovery.py][line:106][INFO] ### for layer 1 and circuit 28, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,504][satisfiability_discovery.py][line:107][INFO] ### for layer 1 and circuit 28, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,504][satisfiability_discovery.py][line:108][INFO] ### for layer 1 and circuit 28, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,504][satisfiability_discovery.py][line:109][INFO] ### for layer 1 and circuit 28, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,504][satisfiability_discovery.py][line:110][INFO] ### for layer 1 and circuit 28, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,504][satisfiability_discovery.py][line:111][INFO] ### for layer 1 and circuit 28, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,504][satisfiability_discovery.py][line:112][INFO] ### for layer 1 and circuit 28, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,504][satisfiability_discovery.py][line:113][INFO] ### for layer 1 and circuit 28, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,504][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 0, the cut list of layer 0 is 
tensor([1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,504][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 0, the cut list of layer 1 is 
tensor([0., 0., 0., 1., 1., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,504][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 0, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,505][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 0, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,505][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 0, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,505][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 0, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,505][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 0, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,505][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 0, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,505][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 0, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,505][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 0, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,505][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 0, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,505][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 1, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1.,
        0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1.])
[2024-07-25 09:01:48,506][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 1, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,506][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 1, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,506][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 1, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,506][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 1, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,506][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 1, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,506][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 1, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,506][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 1, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,506][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 1, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,506][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 1, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,506][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 1, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,507][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 2, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1.,
        1., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1.])
[2024-07-25 09:01:48,507][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 2, the cut list of layer 1 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 1.,
        0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,507][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 2, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,507][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 2, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,507][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 2, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,507][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 2, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,507][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 2, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,507][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 2, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,507][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 2, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,507][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 2, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,508][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 2, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,508][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 3, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,508][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 3, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,508][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 3, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,508][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 3, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,508][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 3, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,508][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 3, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,508][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 3, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,509][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 3, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,509][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 3, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,509][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 3, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,509][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 3, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,509][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 4, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,509][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 4, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,509][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 4, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,509][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 4, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,509][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 4, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,510][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 4, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,510][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 4, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,510][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 4, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,510][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 4, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,510][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 4, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,510][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 4, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,510][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 5, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0.,
        1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,510][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 5, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,511][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 5, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,511][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 5, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,511][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 5, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,511][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 5, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,511][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 5, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,511][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 5, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,511][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 5, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,511][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 5, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,511][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 5, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,511][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 6, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,512][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 6, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,512][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 6, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,512][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 6, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,512][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 6, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,512][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 6, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,512][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 6, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,512][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 6, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,512][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 6, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,512][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 6, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,512][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 6, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,513][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 7, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,513][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 7, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,513][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 7, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,513][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 7, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,513][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 7, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,513][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 7, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,513][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 7, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,513][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 7, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,514][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 7, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,514][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 7, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,514][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 7, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,514][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 8, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,514][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 8, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 0., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,514][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 8, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,514][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 8, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,514][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 8, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,514][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 8, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,515][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 8, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,515][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 8, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,515][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 8, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,515][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 8, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,515][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 8, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,515][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 9, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,515][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 9, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,515][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 9, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,515][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 9, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,516][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 9, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,516][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 9, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,516][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 9, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,516][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 9, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,516][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 9, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,516][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 9, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,516][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 9, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,516][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 10, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0.,
        0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,517][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 10, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0.,
        0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,517][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 10, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,517][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 10, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,517][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 10, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,517][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 10, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,517][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 10, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,517][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 10, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,517][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 10, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,517][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 10, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,517][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 10, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,518][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 11, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,518][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 11, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,518][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 11, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,518][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 11, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,518][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 11, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,518][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 11, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,518][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 11, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,518][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 11, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,518][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 11, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,518][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 11, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,519][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 11, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,519][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 12, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1.,
        1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,519][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 12, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,519][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 12, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,519][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 12, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,519][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 12, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,519][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 12, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,519][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 12, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,520][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 12, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,520][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 12, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,520][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 12, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,520][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 12, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,520][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 13, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,520][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 13, the cut list of layer 1 is 
tensor([0., 0., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1.])
[2024-07-25 09:01:48,520][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 13, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,520][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 13, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,520][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 13, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,520][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 13, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,521][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 13, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,521][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 13, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,521][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 13, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,521][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 13, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,521][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 13, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,521][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 14, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,521][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 14, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,521][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 14, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,522][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 14, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,522][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 14, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,522][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 14, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,522][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 14, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,522][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 14, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,522][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 14, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,522][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 14, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,522][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 14, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,522][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 15, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,523][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 15, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,523][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 15, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,523][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 15, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,523][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 15, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,523][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 15, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,523][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 15, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,523][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 15, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,523][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 15, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,523][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 15, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,523][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 15, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,524][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 16, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,524][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 16, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,524][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 16, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,524][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 16, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,524][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 16, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,524][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 16, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,524][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 16, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,524][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 16, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,524][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 16, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,525][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 16, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,525][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 16, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,525][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 17, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,525][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 17, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,525][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 17, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,525][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 17, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,525][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 17, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,525][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 17, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,526][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 17, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,526][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 17, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,526][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 17, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,526][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 17, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,526][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 17, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,526][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 18, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,526][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 18, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,526][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 18, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,527][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 18, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,527][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 18, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,527][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 18, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,527][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 18, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,527][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 18, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,527][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 18, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,527][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 18, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,527][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 18, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,527][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 19, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,528][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 19, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,528][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 19, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,528][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 19, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,528][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 19, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,528][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 19, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,528][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 19, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,528][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 19, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,528][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 19, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,528][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 19, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,528][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 19, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,529][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 20, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,529][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 20, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,529][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 20, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,529][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 20, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,529][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 20, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,529][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 20, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,529][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 20, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,529][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 20, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,529][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 20, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,530][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 20, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,530][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 20, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,530][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 21, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,530][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 21, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.])
[2024-07-25 09:01:48,530][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 21, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,530][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 21, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,530][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 21, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,530][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 21, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,530][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 21, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,531][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 21, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,531][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 21, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,531][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 21, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,531][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 21, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,531][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 22, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,531][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 22, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,531][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 22, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,531][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 22, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,532][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 22, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,532][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 22, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,532][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 22, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,532][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 22, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,532][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 22, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,532][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 22, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,532][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 22, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,532][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 23, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,532][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 23, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,533][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 23, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,533][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 23, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,533][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 23, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,533][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 23, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,533][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 23, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,533][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 23, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,533][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 23, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,533][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 23, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,533][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 23, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,534][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 24, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,534][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 24, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,534][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 24, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,534][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 24, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,534][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 24, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,534][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 24, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,534][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 24, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,534][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 24, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,534][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 24, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,534][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 24, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,535][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 24, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,535][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 25, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,535][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 25, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,535][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 25, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,535][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 25, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,535][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 25, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,535][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 25, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,535][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 25, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,535][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 25, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,536][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 25, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,536][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 25, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,536][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 25, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,536][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 26, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,536][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 26, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,536][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 26, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,536][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 26, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,536][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 26, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,536][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 26, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,536][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 26, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,537][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 26, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,537][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 26, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,537][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 26, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,537][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 26, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,537][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 27, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,537][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 27, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,537][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 27, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,537][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 27, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,537][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 27, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,537][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 27, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,537][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 27, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,538][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 27, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,538][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 27, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,538][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 27, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,538][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 27, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,538][satisfiability_discovery.py][line:102][INFO] ### for layer 2 and circuit 28, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,538][satisfiability_discovery.py][line:104][INFO] ### for layer 2 and circuit 28, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,538][satisfiability_discovery.py][line:105][INFO] ### for layer 2 and circuit 28, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,538][satisfiability_discovery.py][line:106][INFO] ### for layer 2 and circuit 28, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,538][satisfiability_discovery.py][line:107][INFO] ### for layer 2 and circuit 28, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,538][satisfiability_discovery.py][line:108][INFO] ### for layer 2 and circuit 28, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,538][satisfiability_discovery.py][line:109][INFO] ### for layer 2 and circuit 28, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,538][satisfiability_discovery.py][line:110][INFO] ### for layer 2 and circuit 28, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,539][satisfiability_discovery.py][line:111][INFO] ### for layer 2 and circuit 28, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,539][satisfiability_discovery.py][line:112][INFO] ### for layer 2 and circuit 28, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,539][satisfiability_discovery.py][line:113][INFO] ### for layer 2 and circuit 28, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,539][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 0, the cut list of layer 0 is 
tensor([1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,539][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 0, the cut list of layer 1 is 
tensor([0., 1., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,539][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 0, the cut list of layer 2 is 
tensor([0., 1., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,539][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 0, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,539][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 0, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,539][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 0, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,540][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 0, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,540][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 0, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,540][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 0, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,540][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 0, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,540][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 0, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,540][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 1, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,540][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 1, the cut list of layer 1 is 
tensor([1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,541][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 1, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,541][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 1, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,541][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 1, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,541][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 1, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,541][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 1, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,541][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 1, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,541][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 1, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,541][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 1, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,541][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 1, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,542][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 2, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,542][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 2, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,542][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 2, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,542][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 2, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,542][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 2, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,542][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 2, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,542][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 2, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,542][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 2, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,542][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 2, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,543][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 2, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,543][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 2, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,543][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 3, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,543][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 3, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,543][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 3, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,543][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 3, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,543][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 3, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,544][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 3, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,544][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 3, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,544][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 3, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,544][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 3, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,544][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 3, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,544][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 3, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,544][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 4, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0.,
        0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,544][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 4, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,545][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 4, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,545][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 4, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,545][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 4, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,545][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 4, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,545][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 4, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,545][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 4, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,545][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 4, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,545][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 4, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,545][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 4, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,546][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 5, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0.,
        1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,546][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 5, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,546][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 5, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,546][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 5, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,546][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 5, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,546][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 5, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,546][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 5, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,546][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 5, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,546][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 5, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,547][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 5, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,547][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 5, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,547][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 6, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.,
        1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,547][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 6, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.])
[2024-07-25 09:01:48,547][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 6, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,547][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 6, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,547][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 6, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,548][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 6, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,548][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 6, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,548][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 6, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,548][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 6, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,548][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 6, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,548][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 6, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,548][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 7, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,548][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 7, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,549][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 7, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,549][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 7, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,549][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 7, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,549][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 7, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,549][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 7, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,549][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 7, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,549][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 7, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,549][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 7, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,549][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 7, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,550][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 8, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,550][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 8, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,550][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 8, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,550][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 8, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,550][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 8, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,550][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 8, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,550][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 8, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,550][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 8, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,551][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 8, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,551][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 8, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,551][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 8, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,551][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 9, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,551][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 9, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,551][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 9, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,551][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 9, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,551][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 9, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,552][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 9, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,552][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 9, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,552][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 9, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,552][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 9, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,552][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 9, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,552][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 9, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,552][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 10, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,552][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 10, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.])
[2024-07-25 09:01:48,553][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 10, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,553][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 10, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,553][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 10, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,553][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 10, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,553][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 10, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,553][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 10, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,553][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 10, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,553][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 10, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,553][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 10, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,554][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 11, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,554][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 11, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.])
[2024-07-25 09:01:48,554][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 11, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,554][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 11, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,554][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 11, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,554][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 11, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,554][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 11, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,554][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 11, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,555][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 11, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,555][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 11, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,555][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 11, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,555][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 12, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,555][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 12, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,555][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 12, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,555][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 12, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,556][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 12, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,556][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 12, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,556][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 12, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,556][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 12, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,556][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 12, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,556][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 12, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,556][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 12, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,556][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 13, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0.])
[2024-07-25 09:01:48,556][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 13, the cut list of layer 1 is 
tensor([0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1.])
[2024-07-25 09:01:48,557][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 13, the cut list of layer 2 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1.])
[2024-07-25 09:01:48,557][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 13, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,557][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 13, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,557][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 13, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,557][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 13, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,557][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 13, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,557][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 13, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,557][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 13, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,557][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 13, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,558][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 14, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,558][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 14, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,558][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 14, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,558][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 14, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,558][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 14, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,558][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 14, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,558][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 14, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,558][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 14, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,558][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 14, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,559][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 14, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,559][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 14, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,559][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 15, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,559][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 15, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,559][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 15, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,559][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 15, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,559][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 15, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,560][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 15, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,560][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 15, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,560][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 15, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,560][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 15, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,560][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 15, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,560][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 15, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,560][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 16, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,560][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 16, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,561][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 16, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,561][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 16, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,561][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 16, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,561][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 16, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,561][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 16, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,561][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 16, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,561][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 16, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,561][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 16, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,561][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 16, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,562][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 17, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,562][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 17, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,562][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 17, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,562][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 17, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,562][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 17, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,562][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 17, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,562][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 17, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,562][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 17, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,563][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 17, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,563][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 17, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,563][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 17, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,563][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 18, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,563][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 18, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,563][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 18, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,563][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 18, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,564][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 18, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,564][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 18, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,564][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 18, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,564][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 18, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,564][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 18, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,564][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 18, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,564][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 18, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,564][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 19, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,564][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 19, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,565][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 19, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,565][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 19, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,565][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 19, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,565][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 19, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,565][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 19, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,565][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 19, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,565][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 19, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,565][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 19, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,565][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 19, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,566][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 20, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,566][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 20, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,566][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 20, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,566][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 20, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,566][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 20, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,566][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 20, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,566][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 20, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,567][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 20, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,567][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 20, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,567][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 20, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,567][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 20, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,567][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 21, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,567][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 21, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,567][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 21, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,568][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 21, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,568][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 21, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,568][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 21, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,568][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 21, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,568][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 21, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,568][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 21, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,568][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 21, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,568][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 21, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,568][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 22, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,569][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 22, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,569][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 22, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,569][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 22, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,569][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 22, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,569][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 22, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,569][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 22, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,569][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 22, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,569][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 22, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,569][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 22, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,569][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 22, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,570][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 23, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,570][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 23, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,570][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 23, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,570][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 23, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,570][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 23, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,570][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 23, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,570][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 23, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,571][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 23, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,571][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 23, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,571][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 23, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,571][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 23, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,571][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 24, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,571][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 24, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,571][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 24, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,572][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 24, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,572][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 24, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,572][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 24, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,572][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 24, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,572][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 24, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,572][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 24, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,572][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 24, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,572][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 24, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,572][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 25, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,573][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 25, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,573][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 25, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,573][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 25, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,573][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 25, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,573][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 25, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,573][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 25, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,573][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 25, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,573][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 25, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,573][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 25, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,574][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 25, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,574][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 26, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,574][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 26, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,574][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 26, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,574][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 26, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,574][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 26, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,574][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 26, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,574][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 26, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,574][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 26, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,574][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 26, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,574][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 26, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,575][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 26, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,575][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 27, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,575][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 27, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,575][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 27, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,575][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 27, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,575][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 27, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,575][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 27, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,575][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 27, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,575][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 27, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,575][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 27, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,575][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 27, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,576][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 27, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,576][satisfiability_discovery.py][line:102][INFO] ### for layer 3 and circuit 28, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,576][satisfiability_discovery.py][line:104][INFO] ### for layer 3 and circuit 28, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,576][satisfiability_discovery.py][line:105][INFO] ### for layer 3 and circuit 28, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,576][satisfiability_discovery.py][line:106][INFO] ### for layer 3 and circuit 28, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,576][satisfiability_discovery.py][line:107][INFO] ### for layer 3 and circuit 28, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,576][satisfiability_discovery.py][line:108][INFO] ### for layer 3 and circuit 28, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,576][satisfiability_discovery.py][line:109][INFO] ### for layer 3 and circuit 28, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,576][satisfiability_discovery.py][line:110][INFO] ### for layer 3 and circuit 28, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,576][satisfiability_discovery.py][line:111][INFO] ### for layer 3 and circuit 28, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,576][satisfiability_discovery.py][line:112][INFO] ### for layer 3 and circuit 28, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,577][satisfiability_discovery.py][line:113][INFO] ### for layer 3 and circuit 28, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,577][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 0, the cut list of layer 0 is 
tensor([1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,577][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 0, the cut list of layer 1 is 
tensor([0., 0., 1., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,577][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 0, the cut list of layer 2 is 
tensor([0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,577][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 0, the cut list of layer 3 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,577][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 0, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,577][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 0, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,577][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 0, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,578][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 0, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,578][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 0, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,578][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 0, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,578][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 0, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,578][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 1, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,578][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 1, the cut list of layer 1 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,578][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 1, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,579][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 1, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,579][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 1, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,579][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 1, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,579][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 1, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,579][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 1, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,579][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 1, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,579][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 1, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,579][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 1, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,580][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 2, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,580][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 2, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,580][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 2, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,580][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 2, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,580][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 2, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,580][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 2, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,580][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 2, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,581][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 2, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,581][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 2, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,581][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 2, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,581][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 2, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,581][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 3, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,581][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 3, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,581][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 3, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,582][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 3, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,582][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 3, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,582][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 3, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,582][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 3, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,582][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 3, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,582][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 3, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,582][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 3, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,582][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 3, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,582][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 4, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,583][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 4, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,583][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 4, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,583][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 4, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,583][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 4, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,583][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 4, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,583][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 4, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,583][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 4, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,583][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 4, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,584][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 4, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,584][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 4, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,584][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 5, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,584][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 5, the cut list of layer 1 is 
tensor([0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,584][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 5, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,585][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 5, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,585][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 5, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,585][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 5, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,585][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 5, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,585][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 5, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,585][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 5, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,585][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 5, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,585][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 5, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,585][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 6, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,586][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 6, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,586][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 6, the cut list of layer 2 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,586][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 6, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,586][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 6, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,586][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 6, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,586][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 6, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,586][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 6, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,586][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 6, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,587][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 6, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,587][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 6, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,587][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 7, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0.,
        0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,587][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 7, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,587][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 7, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,587][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 7, the cut list of layer 3 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        0., 0., 1., 1., 1., 0., 1., 1., 0., 1., 1.])
[2024-07-25 09:01:48,587][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 7, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,588][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 7, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,588][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 7, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,588][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 7, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,588][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 7, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,588][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 7, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,588][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 7, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,588][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 8, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,588][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 8, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,589][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 8, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,589][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 8, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,589][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 8, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,589][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 8, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,589][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 8, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,589][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 8, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,589][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 8, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,589][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 8, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,589][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 8, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,590][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 9, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0.,
        0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,590][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 9, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,590][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 9, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,590][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 9, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,590][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 9, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,591][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 9, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,591][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 9, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,591][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 9, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,591][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 9, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,591][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 9, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,591][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 9, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,591][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 10, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,591][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 10, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1.])
[2024-07-25 09:01:48,592][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 10, the cut list of layer 2 is 
tensor([0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0.])
[2024-07-25 09:01:48,592][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 10, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,592][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 10, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,592][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 10, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,592][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 10, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,592][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 10, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,592][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 10, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,592][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 10, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,592][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 10, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,593][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 11, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1.,
        1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,593][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 11, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,593][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 11, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,593][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 11, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,593][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 11, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,593][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 11, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,593][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 11, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,594][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 11, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,594][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 11, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,594][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 11, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,594][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 11, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,594][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 12, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,594][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 12, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,594][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 12, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,595][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 12, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,595][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 12, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,595][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 12, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,595][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 12, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,595][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 12, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,595][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 12, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,595][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 12, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,595][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 12, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,595][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 13, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,596][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 13, the cut list of layer 1 is 
tensor([0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,596][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 13, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,596][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 13, the cut list of layer 3 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,596][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 13, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,596][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 13, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,596][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 13, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,596][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 13, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,596][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 13, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,596][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 13, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,597][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 13, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,597][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 14, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,597][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 14, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,597][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 14, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,597][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 14, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,598][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 14, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,598][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 14, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,598][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 14, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,598][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 14, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,598][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 14, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,598][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 14, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,598][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 14, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,598][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 15, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,598][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 15, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,599][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 15, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,599][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 15, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,599][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 15, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,599][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 15, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,599][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 15, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,599][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 15, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,599][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 15, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,599][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 15, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,599][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 15, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,600][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 16, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,600][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 16, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,600][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 16, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,600][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 16, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,600][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 16, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,601][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 16, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,601][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 16, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,601][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 16, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,601][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 16, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,601][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 16, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,601][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 16, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,601][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 17, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,601][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 17, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,602][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 17, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,602][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 17, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,602][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 17, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,602][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 17, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,602][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 17, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,602][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 17, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,602][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 17, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,602][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 17, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,602][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 17, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,603][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 18, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,603][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 18, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,603][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 18, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,603][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 18, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,603][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 18, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,603][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 18, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,604][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 18, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,604][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 18, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,604][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 18, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,604][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 18, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,604][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 18, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,604][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 19, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,604][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 19, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,605][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 19, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,605][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 19, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,605][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 19, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,605][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 19, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,605][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 19, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,605][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 19, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,605][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 19, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,605][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 19, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,605][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 19, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,606][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 20, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,606][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 20, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,606][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 20, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,606][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 20, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,606][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 20, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,606][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 20, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,606][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 20, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,607][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 20, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,607][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 20, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,607][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 20, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,607][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 20, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,607][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 21, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,607][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 21, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,607][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 21, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,608][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 21, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,608][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 21, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,608][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 21, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,608][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 21, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,608][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 21, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,608][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 21, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,608][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 21, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,608][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 21, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,609][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 22, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,609][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 22, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,609][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 22, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,609][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 22, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,609][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 22, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,609][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 22, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,609][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 22, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,610][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 22, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,610][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 22, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,610][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 22, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,610][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 22, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,610][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 23, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,610][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 23, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,610][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 23, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,611][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 23, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,611][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 23, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,611][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 23, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,611][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 23, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,611][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 23, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,611][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 23, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,611][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 23, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,611][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 23, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,611][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 24, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,612][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 24, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,612][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 24, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,612][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 24, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,612][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 24, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,612][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 24, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,612][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 24, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,612][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 24, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,613][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 24, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,613][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 24, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,613][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 24, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,613][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 25, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,613][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 25, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,613][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 25, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,614][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 25, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,614][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 25, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,614][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 25, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,614][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 25, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,614][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 25, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,614][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 25, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,614][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 25, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,614][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 25, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,614][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 26, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,614][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 26, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,614][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 26, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,615][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 26, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,615][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 26, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,615][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 26, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,615][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 26, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,615][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 26, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,615][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 26, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,615][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 26, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,615][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 26, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,615][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 27, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,615][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 27, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,615][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 27, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,616][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 27, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,616][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 27, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,616][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 27, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,616][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 27, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,616][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 27, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,616][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 27, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,616][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 27, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,616][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 27, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,616][satisfiability_discovery.py][line:102][INFO] ### for layer 4 and circuit 28, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,616][satisfiability_discovery.py][line:104][INFO] ### for layer 4 and circuit 28, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,616][satisfiability_discovery.py][line:105][INFO] ### for layer 4 and circuit 28, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,617][satisfiability_discovery.py][line:106][INFO] ### for layer 4 and circuit 28, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,617][satisfiability_discovery.py][line:107][INFO] ### for layer 4 and circuit 28, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,617][satisfiability_discovery.py][line:108][INFO] ### for layer 4 and circuit 28, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,617][satisfiability_discovery.py][line:109][INFO] ### for layer 4 and circuit 28, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,617][satisfiability_discovery.py][line:110][INFO] ### for layer 4 and circuit 28, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,617][satisfiability_discovery.py][line:111][INFO] ### for layer 4 and circuit 28, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,617][satisfiability_discovery.py][line:112][INFO] ### for layer 4 and circuit 28, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,617][satisfiability_discovery.py][line:113][INFO] ### for layer 4 and circuit 28, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,617][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 0, the cut list of layer 0 is 
tensor([1., 1., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,617][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 0, the cut list of layer 1 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,618][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 0, the cut list of layer 2 is 
tensor([0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,618][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 0, the cut list of layer 3 is 
tensor([0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,618][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 0, the cut list of layer 4 is 
tensor([0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,618][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 0, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,618][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 0, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,618][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 0, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,618][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 0, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,618][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 0, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,618][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 0, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,619][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 1, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 1.])
[2024-07-25 09:01:48,619][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 1, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1.])
[2024-07-25 09:01:48,619][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 1, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0.,
        1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 1.])
[2024-07-25 09:01:48,619][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 1, the cut list of layer 3 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1.,
        1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 1.])
[2024-07-25 09:01:48,619][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 1, the cut list of layer 4 is 
tensor([0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0.,
        0., 0., 1., 0., 0., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,619][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 1, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,620][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 1, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,620][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 1, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,620][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 1, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,620][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 1, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,620][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 1, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,620][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 2, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1.])
[2024-07-25 09:01:48,620][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 2, the cut list of layer 1 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,620][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 2, the cut list of layer 2 is 
tensor([0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,621][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 2, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,621][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 2, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,621][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 2, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,621][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 2, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,621][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 2, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,621][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 2, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,621][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 2, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,621][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 2, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,622][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 3, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1.])
[2024-07-25 09:01:48,622][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 3, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,622][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 3, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,622][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 3, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,622][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 3, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,622][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 3, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,623][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 3, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,623][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 3, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,623][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 3, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,623][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 3, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,623][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 3, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,623][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 4, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1.,
        0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1.])
[2024-07-25 09:01:48,623][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 4, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,624][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 4, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1.])
[2024-07-25 09:01:48,624][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 4, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,624][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 4, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,624][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 4, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,624][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 4, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,624][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 4, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,624][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 4, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,624][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 4, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,624][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 4, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,625][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 5, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,625][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 5, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,625][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 5, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,625][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 5, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,626][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 5, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.])
[2024-07-25 09:01:48,626][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 5, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,626][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 5, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,626][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 5, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,626][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 5, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,626][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 5, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,626][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 5, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,626][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 6, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,626][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 6, the cut list of layer 1 is 
tensor([0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,627][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 6, the cut list of layer 2 is 
tensor([0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,627][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 6, the cut list of layer 3 is 
tensor([0., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,627][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 6, the cut list of layer 4 is 
tensor([0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,627][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 6, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,627][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 6, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,627][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 6, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,627][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 6, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,627][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 6, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,627][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 6, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,628][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 7, the cut list of layer 0 is 
tensor([1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0.,
        0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1.])
[2024-07-25 09:01:48,628][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 7, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 0., 0., 1., 0., 0., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,628][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 7, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,628][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 7, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1.])
[2024-07-25 09:01:48,628][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 7, the cut list of layer 4 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1.])
[2024-07-25 09:01:48,628][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 7, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,629][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 7, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,629][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 7, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,629][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 7, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,629][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 7, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,629][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 7, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,629][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 8, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,629][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 8, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,630][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 8, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,630][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 8, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,630][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 8, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,630][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 8, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,630][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 8, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,630][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 8, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,630][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 8, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,630][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 8, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,630][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 8, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,631][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 9, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,631][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 9, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,631][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 9, the cut list of layer 2 is 
tensor([0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,631][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 9, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,631][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 9, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,632][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 9, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,632][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 9, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,632][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 9, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,632][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 9, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,632][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 9, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,632][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 9, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,632][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 10, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1.])
[2024-07-25 09:01:48,632][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 10, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0.,
        0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,633][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 10, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1.])
[2024-07-25 09:01:48,633][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 10, the cut list of layer 3 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1.])
[2024-07-25 09:01:48,633][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 10, the cut list of layer 4 is 
tensor([0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,633][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 10, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,633][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 10, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,633][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 10, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,633][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 10, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,633][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 10, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,633][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 10, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,634][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 11, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,634][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 11, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.])
[2024-07-25 09:01:48,634][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 11, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,634][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 11, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,634][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 11, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,635][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 11, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,635][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 11, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,635][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 11, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,635][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 11, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,635][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 11, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,635][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 11, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,635][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 12, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1.])
[2024-07-25 09:01:48,635][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 12, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,636][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 12, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,636][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 12, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,636][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 12, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,636][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 12, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,636][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 12, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,636][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 12, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,636][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 12, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,636][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 12, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,637][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 12, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,637][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 13, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        1., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,637][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 13, the cut list of layer 1 is 
tensor([1., 0., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1.])
[2024-07-25 09:01:48,637][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 13, the cut list of layer 2 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1.,
        0., 1., 1., 0., 0., 0., 0., 1., 1., 0., 1.])
[2024-07-25 09:01:48,637][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 13, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,637][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 13, the cut list of layer 4 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0.,
        0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,637][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 13, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,638][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 13, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,638][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 13, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,638][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 13, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,638][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 13, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,638][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 13, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,638][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 14, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,638][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 14, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,638][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 14, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,639][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 14, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,639][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 14, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,639][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 14, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,639][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 14, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,639][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 14, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,639][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 14, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,639][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 14, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,639][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 14, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,640][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 15, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,640][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 15, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,640][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 15, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,640][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 15, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,640][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 15, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,641][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 15, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,641][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 15, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,641][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 15, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,641][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 15, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,641][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 15, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,641][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 15, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,641][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 16, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,641][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 16, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,642][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 16, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,642][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 16, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,642][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 16, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,642][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 16, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,642][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 16, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,642][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 16, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,642][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 16, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,643][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 16, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,643][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 16, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,643][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 17, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,643][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 17, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,643][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 17, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,643][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 17, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,644][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 17, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,644][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 17, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,644][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 17, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,644][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 17, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,644][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 17, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,644][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 17, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,644][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 17, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,644][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 18, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,645][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 18, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,645][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 18, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,645][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 18, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,645][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 18, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,645][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 18, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,645][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 18, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,645][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 18, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,646][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 18, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,646][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 18, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,646][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 18, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,646][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 19, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,646][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 19, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,646][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 19, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,647][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 19, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,647][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 19, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,647][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 19, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,647][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 19, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,647][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 19, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,647][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 19, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,647][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 19, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,647][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 19, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,648][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 20, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,648][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 20, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,648][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 20, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,648][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 20, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,648][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 20, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,648][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 20, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,649][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 20, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,649][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 20, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,649][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 20, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,649][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 20, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,649][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 20, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,649][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 21, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,649][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 21, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,650][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 21, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,650][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 21, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,650][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 21, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,650][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 21, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,650][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 21, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,650][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 21, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,650][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 21, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,650][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 21, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,650][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 21, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,651][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 22, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,651][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 22, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,651][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 22, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,651][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 22, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,651][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 22, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,652][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 22, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,652][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 22, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,652][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 22, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,652][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 22, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,652][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 22, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,652][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 22, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,652][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 23, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,652][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 23, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,653][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 23, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,653][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 23, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,653][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 23, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,653][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 23, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,653][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 23, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,653][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 23, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,653][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 23, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,653][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 23, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,654][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 23, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,654][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 24, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,654][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 24, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,654][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 24, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,654][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 24, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,655][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 24, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,655][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 24, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,655][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 24, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,655][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 24, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,655][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 24, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,655][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 24, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,655][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 24, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,655][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 25, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,656][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 25, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,656][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 25, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,656][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 25, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,656][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 25, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,656][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 25, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,656][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 25, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,656][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 25, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,657][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 25, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,657][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 25, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,657][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 25, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,657][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 26, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,657][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 26, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,657][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 26, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,657][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 26, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,657][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 26, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,657][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 26, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,657][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 26, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,657][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 26, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,658][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 26, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,658][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 26, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,658][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 26, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,658][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 27, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,658][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 27, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,658][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 27, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,658][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 27, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,658][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 27, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,658][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 27, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,658][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 27, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,658][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 27, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,659][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 27, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,659][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 27, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,659][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 27, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,659][satisfiability_discovery.py][line:102][INFO] ### for layer 5 and circuit 28, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,659][satisfiability_discovery.py][line:104][INFO] ### for layer 5 and circuit 28, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,659][satisfiability_discovery.py][line:105][INFO] ### for layer 5 and circuit 28, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,659][satisfiability_discovery.py][line:106][INFO] ### for layer 5 and circuit 28, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,659][satisfiability_discovery.py][line:107][INFO] ### for layer 5 and circuit 28, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,659][satisfiability_discovery.py][line:108][INFO] ### for layer 5 and circuit 28, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,659][satisfiability_discovery.py][line:109][INFO] ### for layer 5 and circuit 28, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,659][satisfiability_discovery.py][line:110][INFO] ### for layer 5 and circuit 28, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,660][satisfiability_discovery.py][line:111][INFO] ### for layer 5 and circuit 28, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,660][satisfiability_discovery.py][line:112][INFO] ### for layer 5 and circuit 28, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,660][satisfiability_discovery.py][line:113][INFO] ### for layer 5 and circuit 28, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,660][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 0, the cut list of layer 0 is 
tensor([1., 1., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,660][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 0, the cut list of layer 1 is 
tensor([0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,660][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 0, the cut list of layer 2 is 
tensor([0., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,660][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 0, the cut list of layer 3 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1.])
[2024-07-25 09:01:48,660][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 0, the cut list of layer 4 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,661][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 0, the cut list of layer 5 is 
tensor([0., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,661][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 0, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,661][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 0, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,661][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 0, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,661][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 0, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,661][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 0, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,661][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 1, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,662][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 1, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,662][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 1, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,662][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 1, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,662][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 1, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,662][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 1, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,662][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 1, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,662][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 1, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,663][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 1, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,663][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 1, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,663][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 1, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,663][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 2, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,663][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 2, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,663][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 2, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,664][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 2, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0.,
        0., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,664][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 2, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,664][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 2, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,664][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 2, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,664][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 2, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,664][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 2, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,664][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 2, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,664][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 2, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,665][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 3, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,665][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 3, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0.,
        0., 0., 1., 1., 1., 0., 1., 0., 1., 1., 1.])
[2024-07-25 09:01:48,665][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 3, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,665][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 3, the cut list of layer 3 is 
tensor([1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,665][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 3, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,666][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 3, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1.])
[2024-07-25 09:01:48,666][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 3, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,666][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 3, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,666][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 3, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,666][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 3, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,666][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 3, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,666][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 4, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,666][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 4, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,667][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 4, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,667][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 4, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,667][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 4, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,667][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 4, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,667][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 4, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,667][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 4, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,667][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 4, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,668][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 4, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,668][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 4, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,668][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 5, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0.,
        1., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,668][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 5, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1.,
        0., 0., 1., 1., 1., 0., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,668][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 5, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,668][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 5, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,669][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 5, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,669][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 5, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 0., 0., 0., 0., 1., 1., 0., 1., 1.])
[2024-07-25 09:01:48,669][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 5, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,669][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 5, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,669][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 5, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,669][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 5, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,669][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 5, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,670][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 6, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 0., 1., 1., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,670][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 6, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,670][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 6, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,670][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 6, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,670][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 6, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,671][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 6, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,671][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 6, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,671][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 6, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,671][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 6, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,671][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 6, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,671][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 6, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,671][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 7, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1.,
        1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,671][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 7, the cut list of layer 1 is 
tensor([0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1.])
[2024-07-25 09:01:48,672][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 7, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,672][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 7, the cut list of layer 3 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,672][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 7, the cut list of layer 4 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1.,
        1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1.])
[2024-07-25 09:01:48,672][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 7, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.])
[2024-07-25 09:01:48,672][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 7, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,672][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 7, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,672][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 7, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,673][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 7, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,673][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 7, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,673][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 8, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,673][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 8, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,673][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 8, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,673][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 8, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,674][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 8, the cut list of layer 4 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,674][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 8, the cut list of layer 5 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,674][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 8, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,674][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 8, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,674][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 8, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,674][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 8, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,674][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 8, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,674][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 9, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0.,
        1., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,675][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 9, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,675][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 9, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,675][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 9, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,675][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 9, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,675][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 9, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,676][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 9, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,676][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 9, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,676][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 9, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,676][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 9, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,676][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 9, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,676][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 10, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1.,
        1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,676][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 10, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1.,
        0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,676][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 10, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0.,
        0., 0., 1., 1., 0., 1., 1., 0., 1., 1., 1.])
[2024-07-25 09:01:48,677][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 10, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1.])
[2024-07-25 09:01:48,677][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 10, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,677][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 10, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,677][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 10, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,677][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 10, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,677][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 10, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,677][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 10, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,678][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 10, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,678][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 11, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.])
[2024-07-25 09:01:48,678][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 11, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,678][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 11, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,678][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 11, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0.,
        1., 0., 1., 0., 1., 0., 1., 1., 0., 1., 1.])
[2024-07-25 09:01:48,679][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 11, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0.,
        0., 0., 1., 1., 0., 1., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,679][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 11, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,679][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 11, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,679][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 11, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,679][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 11, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,679][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 11, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,679][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 11, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,679][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 12, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1.,
        1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 1.])
[2024-07-25 09:01:48,680][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 12, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0.,
        0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,680][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 12, the cut list of layer 2 is 
tensor([0., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,680][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 12, the cut list of layer 3 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,680][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 12, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1.,
        1., 0., 0., 1., 0., 0., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,680][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 12, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,680][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 12, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,680][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 12, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,681][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 12, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,681][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 12, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,681][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 12, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,681][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 13, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0.,
        0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,681][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 13, the cut list of layer 1 is 
tensor([0., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1.])
[2024-07-25 09:01:48,681][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 13, the cut list of layer 2 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0.,
        0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,681][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 13, the cut list of layer 3 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0.,
        0., 1., 1., 1., 1., 0., 1., 0., 0., 1., 1.])
[2024-07-25 09:01:48,682][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 13, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0.,
        0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,682][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 13, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1.])
[2024-07-25 09:01:48,682][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 13, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,682][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 13, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,682][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 13, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,682][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 13, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,682][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 13, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,682][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 14, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,683][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 14, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,683][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 14, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,683][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 14, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,683][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 14, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,683][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 14, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,684][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 14, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,684][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 14, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,684][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 14, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,684][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 14, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,684][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 14, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,684][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 15, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.])
[2024-07-25 09:01:48,684][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 15, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,685][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 15, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,685][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 15, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,685][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 15, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,685][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 15, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,685][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 15, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,685][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 15, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,685][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 15, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,685][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 15, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,686][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 15, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,686][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 16, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,686][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 16, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,686][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 16, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,686][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 16, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,687][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 16, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,687][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 16, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,687][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 16, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,687][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 16, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,687][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 16, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,687][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 16, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,687][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 16, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,687][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 17, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0.,
        1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,688][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 17, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,688][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 17, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,688][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 17, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,688][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 17, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,688][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 17, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,689][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 17, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,689][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 17, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,689][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 17, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,689][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 17, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,689][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 17, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,689][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 18, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,689][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 18, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,690][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 18, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,690][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 18, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,690][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 18, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,690][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 18, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,690][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 18, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,690][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 18, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,690][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 18, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,690][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 18, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,691][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 18, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,691][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 19, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,691][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 19, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,691][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 19, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,691][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 19, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,692][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 19, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,692][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 19, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,692][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 19, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,692][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 19, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,692][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 19, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,692][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 19, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,692][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 19, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,692][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 20, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,693][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 20, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,693][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 20, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,693][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 20, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,693][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 20, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,693][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 20, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,694][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 20, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,694][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 20, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,694][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 20, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,694][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 20, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,694][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 20, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,694][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 21, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,694][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 21, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,695][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 21, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,695][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 21, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,695][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 21, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,695][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 21, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,695][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 21, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,695][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 21, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,695][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 21, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,696][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 21, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,696][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 21, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,696][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 22, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,696][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 22, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,696][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 22, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,696][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 22, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,697][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 22, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,697][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 22, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,697][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 22, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,697][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 22, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,697][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 22, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,697][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 22, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,697][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 22, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,697][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 23, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,698][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 23, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,698][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 23, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,698][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 23, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,698][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 23, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,699][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 23, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,699][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 23, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,699][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 23, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,699][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 23, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,699][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 23, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,699][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 23, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,699][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 24, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,699][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 24, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,700][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 24, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,700][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 24, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,700][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 24, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,700][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 24, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,700][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 24, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,700][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 24, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,701][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 24, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,701][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 24, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,701][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 24, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,701][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 25, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,701][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 25, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,701][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 25, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,702][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 25, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,702][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 25, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,702][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 25, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,702][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 25, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,702][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 25, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,702][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 25, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,702][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 25, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,702][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 25, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,702][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 26, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,703][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 26, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,703][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 26, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,703][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 26, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,703][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 26, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,703][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 26, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,703][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 26, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,703][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 26, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,703][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 26, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,703][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 26, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,703][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 26, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,703][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 27, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,704][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 27, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,704][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 27, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,704][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 27, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,704][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 27, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,704][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 27, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,704][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 27, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,704][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 27, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,704][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 27, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,704][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 27, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,704][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 27, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,704][satisfiability_discovery.py][line:102][INFO] ### for layer 6 and circuit 28, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,705][satisfiability_discovery.py][line:104][INFO] ### for layer 6 and circuit 28, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,705][satisfiability_discovery.py][line:105][INFO] ### for layer 6 and circuit 28, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,705][satisfiability_discovery.py][line:106][INFO] ### for layer 6 and circuit 28, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,705][satisfiability_discovery.py][line:107][INFO] ### for layer 6 and circuit 28, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,705][satisfiability_discovery.py][line:108][INFO] ### for layer 6 and circuit 28, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,705][satisfiability_discovery.py][line:109][INFO] ### for layer 6 and circuit 28, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,705][satisfiability_discovery.py][line:110][INFO] ### for layer 6 and circuit 28, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,705][satisfiability_discovery.py][line:111][INFO] ### for layer 6 and circuit 28, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,705][satisfiability_discovery.py][line:112][INFO] ### for layer 6 and circuit 28, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,705][satisfiability_discovery.py][line:113][INFO] ### for layer 6 and circuit 28, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,705][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 0, the cut list of layer 0 is 
tensor([0., 1., 0., 1., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,706][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 0, the cut list of layer 1 is 
tensor([0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,706][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 0, the cut list of layer 2 is 
tensor([0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,706][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 0, the cut list of layer 3 is 
tensor([0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,706][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 0, the cut list of layer 4 is 
tensor([0., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,706][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 0, the cut list of layer 5 is 
tensor([0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,706][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 0, the cut list of layer 6 is 
tensor([0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,706][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 0, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,707][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 0, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,707][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 0, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,707][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 0, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,707][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 1, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,707][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 1, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,707][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 1, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,708][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 1, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,708][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 1, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,708][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 1, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,708][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 1, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,708][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 1, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,708][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 1, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,708][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 1, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,709][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 1, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,709][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 2, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1.])
[2024-07-25 09:01:48,709][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 2, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0.,
        1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,709][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 2, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,709][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 2, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,710][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 2, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,710][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 2, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,710][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 2, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1.,
        1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,710][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 2, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,710][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 2, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,710][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 2, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,710][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 2, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,711][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 3, the cut list of layer 0 is 
tensor([0., 1., 0., 0., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1., 0., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,711][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 3, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,711][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 3, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,711][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 3, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,711][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 3, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,712][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 3, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,712][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 3, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,712][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 3, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,712][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 3, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,712][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 3, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,712][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 3, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,712][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 4, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,713][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 4, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,713][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 4, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1.])
[2024-07-25 09:01:48,713][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 4, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,713][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 4, the cut list of layer 4 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,713][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 4, the cut list of layer 5 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,713][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 4, the cut list of layer 6 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,714][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 4, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,714][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 4, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,714][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 4, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,714][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 4, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,714][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 5, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0.,
        0., 1., 1., 0., 0., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,714][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 5, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,714][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 5, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,715][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 5, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1.])
[2024-07-25 09:01:48,715][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 5, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,715][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 5, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,715][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 5, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,715][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 5, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,715][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 5, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,716][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 5, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,716][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 5, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,716][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 6, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,716][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 6, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,716][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 6, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,716][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 6, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,717][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 6, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,717][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 6, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,717][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 6, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,717][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 6, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,717][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 6, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,717][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 6, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,717][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 6, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,718][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 7, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,718][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 7, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,718][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 7, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,718][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 7, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1.])
[2024-07-25 09:01:48,718][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 7, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0.,
        0., 1., 0., 1., 0., 0., 0., 1., 0., 1., 1.])
[2024-07-25 09:01:48,719][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 7, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1.,
        1., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,719][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 7, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,719][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 7, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,719][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 7, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,719][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 7, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,719][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 7, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,719][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 8, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0.])
[2024-07-25 09:01:48,720][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 8, the cut list of layer 1 is 
tensor([0., 1., 0., 0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.])
[2024-07-25 09:01:48,720][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 8, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,720][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 8, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,720][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 8, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,720][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 8, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,721][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 8, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,721][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 8, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,721][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 8, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,721][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 8, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,721][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 8, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,721][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 9, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,721][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 9, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,722][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 9, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,722][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 9, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,722][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 9, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,722][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 9, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,722][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 9, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,722][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 9, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,723][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 9, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,723][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 9, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,723][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 9, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,723][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 10, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0.,
        1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,723][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 10, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,723][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 10, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,724][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 10, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,724][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 10, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,724][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 10, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,724][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 10, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,724][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 10, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,724][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 10, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,724][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 10, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,725][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 10, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,725][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 11, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,725][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 11, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,725][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 11, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,725][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 11, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,726][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 11, the cut list of layer 4 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,726][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 11, the cut list of layer 5 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,726][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 11, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,726][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 11, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,726][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 11, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,726][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 11, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,726][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 11, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,726][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 12, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1.,
        0., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,727][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 12, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,727][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 12, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,727][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 12, the cut list of layer 3 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,727][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 12, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.])
[2024-07-25 09:01:48,727][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 12, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,728][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 12, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,728][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 12, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,728][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 12, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,728][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 12, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,728][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 12, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,728][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 13, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,728][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 13, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0.,
        0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1.])
[2024-07-25 09:01:48,729][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 13, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0.,
        0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1.])
[2024-07-25 09:01:48,729][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 13, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0.,
        0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 1.])
[2024-07-25 09:01:48,729][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 13, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0.,
        0., 1., 1., 1., 0., 1., 0., 1., 0., 1., 1.])
[2024-07-25 09:01:48,729][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 13, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1.,
        1., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,729][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 13, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1.,
        1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1.])
[2024-07-25 09:01:48,729][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 13, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,730][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 13, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,730][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 13, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,730][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 13, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,730][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 14, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,730][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 14, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,730][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 14, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,731][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 14, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,731][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 14, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,731][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 14, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,731][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 14, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,731][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 14, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,731][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 14, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,731][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 14, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,731][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 14, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,732][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 15, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,732][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 15, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,732][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 15, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,732][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 15, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,733][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 15, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,733][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 15, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,733][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 15, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,733][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 15, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,733][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 15, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,733][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 15, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,733][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 15, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,733][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 16, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,734][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 16, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,734][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 16, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,734][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 16, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,734][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 16, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,734][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 16, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,735][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 16, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,735][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 16, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,735][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 16, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,735][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 16, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,735][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 16, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,735][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 17, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,735][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 17, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,736][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 17, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,736][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 17, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,736][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 17, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,736][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 17, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,736][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 17, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,737][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 17, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,737][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 17, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,737][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 17, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,737][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 17, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,737][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 18, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,737][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 18, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,737][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 18, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,738][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 18, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,738][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 18, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,738][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 18, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,738][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 18, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,738][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 18, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,738][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 18, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,739][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 18, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,739][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 18, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,739][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 19, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,739][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 19, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,739][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 19, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,739][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 19, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,740][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 19, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,740][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 19, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,740][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 19, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,740][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 19, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,740][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 19, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,740][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 19, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,740][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 19, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,741][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 20, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,741][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 20, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,741][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 20, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,741][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 20, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,741][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 20, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,742][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 20, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,742][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 20, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,742][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 20, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,742][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 20, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,742][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 20, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,742][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 20, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,742][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 21, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,743][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 21, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,743][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 21, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,743][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 21, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,743][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 21, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,743][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 21, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,744][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 21, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,744][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 21, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,744][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 21, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,744][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 21, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,744][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 21, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,744][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 22, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,744][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 22, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,745][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 22, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,745][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 22, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,745][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 22, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,745][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 22, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,745][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 22, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,746][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 22, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,746][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 22, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,746][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 22, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,746][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 22, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,746][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 23, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,746][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 23, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,746][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 23, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,747][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 23, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,747][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 23, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,747][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 23, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,747][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 23, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,747][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 23, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,747][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 23, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,748][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 23, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,748][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 23, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,748][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 24, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,748][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 24, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,748][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 24, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,748][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 24, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,749][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 24, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,749][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 24, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,749][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 24, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,749][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 24, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,749][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 24, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,749][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 24, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,749][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 24, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,750][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 25, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,750][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 25, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,750][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 25, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,750][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 25, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,750][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 25, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,751][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 25, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,751][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 25, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,751][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 25, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,751][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 25, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,751][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 25, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,751][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 25, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,751][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 26, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,751][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 26, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,751][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 26, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,752][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 26, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,752][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 26, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,752][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 26, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,752][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 26, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,752][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 26, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,752][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 26, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,752][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 26, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,752][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 26, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,752][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 27, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,752][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 27, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,752][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 27, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,753][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 27, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,753][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 27, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,753][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 27, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,753][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 27, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,753][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 27, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,753][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 27, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,753][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 27, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,753][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 27, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,753][satisfiability_discovery.py][line:102][INFO] ### for layer 7 and circuit 28, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,753][satisfiability_discovery.py][line:104][INFO] ### for layer 7 and circuit 28, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,753][satisfiability_discovery.py][line:105][INFO] ### for layer 7 and circuit 28, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,754][satisfiability_discovery.py][line:106][INFO] ### for layer 7 and circuit 28, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,754][satisfiability_discovery.py][line:107][INFO] ### for layer 7 and circuit 28, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,754][satisfiability_discovery.py][line:108][INFO] ### for layer 7 and circuit 28, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,754][satisfiability_discovery.py][line:109][INFO] ### for layer 7 and circuit 28, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,754][satisfiability_discovery.py][line:110][INFO] ### for layer 7 and circuit 28, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,754][satisfiability_discovery.py][line:111][INFO] ### for layer 7 and circuit 28, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,754][satisfiability_discovery.py][line:112][INFO] ### for layer 7 and circuit 28, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,754][satisfiability_discovery.py][line:113][INFO] ### for layer 7 and circuit 28, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,754][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 0, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,755][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 0, the cut list of layer 1 is 
tensor([0., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,755][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 0, the cut list of layer 2 is 
tensor([0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,755][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 0, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,755][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 0, the cut list of layer 4 is 
tensor([0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,755][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 0, the cut list of layer 5 is 
tensor([0., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,755][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 0, the cut list of layer 6 is 
tensor([0., 1., 0., 1., 0., 1., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,755][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 0, the cut list of layer 7 is 
tensor([0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1.])
[2024-07-25 09:01:48,755][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 0, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,756][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 0, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,756][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 0, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,756][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 1, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,756][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 1, the cut list of layer 1 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,756][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 1, the cut list of layer 2 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1.,
        0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,756][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 1, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1.])
[2024-07-25 09:01:48,757][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 1, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,757][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 1, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,757][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 1, the cut list of layer 6 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,757][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 1, the cut list of layer 7 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,757][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 1, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,757][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 1, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,757][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 1, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,758][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 2, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,758][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 2, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,758][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 2, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,758][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 2, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,758][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 2, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,759][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 2, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,759][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 2, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1.])
[2024-07-25 09:01:48,759][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 2, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,759][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 2, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,759][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 2, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,759][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 2, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,760][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 3, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 1., 0., 1., 0., 1., 0., 1., 0., 0., 1.])
[2024-07-25 09:01:48,760][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 3, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 1.,
        0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,760][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 3, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,760][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 3, the cut list of layer 3 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 0.,
        0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1.])
[2024-07-25 09:01:48,760][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 3, the cut list of layer 4 is 
tensor([0., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,760][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 3, the cut list of layer 5 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1.,
        0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,761][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 3, the cut list of layer 6 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,761][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 3, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 1.,
        1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1.])
[2024-07-25 09:01:48,761][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 3, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,761][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 3, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,761][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 3, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,761][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 4, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,761][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 4, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,762][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 4, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,762][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 4, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,762][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 4, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,762][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 4, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,762][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 4, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,763][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 4, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,763][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 4, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,763][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 4, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,763][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 4, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,763][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 5, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,763][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 5, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,764][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 5, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,764][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 5, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,764][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 5, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,764][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 5, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,764][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 5, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,765][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 5, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,765][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 5, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,765][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 5, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,765][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 5, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,765][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 6, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,765][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 6, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,765][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 6, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,766][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 6, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,766][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 6, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,766][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 6, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,766][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 6, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,766][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 6, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,767][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 6, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,767][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 6, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,767][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 6, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,767][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 7, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,767][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 7, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,767][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 7, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,768][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 7, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,768][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 7, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,768][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 7, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,768][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 7, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,768][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 7, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,768][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 7, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,769][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 7, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,769][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 7, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,769][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 8, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,769][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 8, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,769][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 8, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,769][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 8, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,770][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 8, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,770][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 8, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,770][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 8, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,770][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 8, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,770][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 8, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,770][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 8, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,771][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 8, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,771][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 9, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1.,
        1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,771][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 9, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,771][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 9, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,771][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 9, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,772][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 9, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,772][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 9, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,772][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 9, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,772][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 9, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,772][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 9, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,772][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 9, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,772][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 9, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,773][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 10, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1.,
        1., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1.])
[2024-07-25 09:01:48,773][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 10, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,773][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 10, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1.,
        0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,773][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 10, the cut list of layer 3 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1.])
[2024-07-25 09:01:48,773][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 10, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,774][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 10, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1.])
[2024-07-25 09:01:48,774][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 10, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0.,
        1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,774][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 10, the cut list of layer 7 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,774][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 10, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,774][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 10, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,774][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 10, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,774][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 11, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 0., 0., 1., 0., 0., 1.])
[2024-07-25 09:01:48,775][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 11, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1.])
[2024-07-25 09:01:48,775][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 11, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,775][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 11, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 0., 1., 0., 1., 0., 1., 0., 1., 1., 1.])
[2024-07-25 09:01:48,775][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 11, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,775][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 11, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,776][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 11, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0.,
        1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,776][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 11, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,776][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 11, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,776][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 11, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,776][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 11, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,776][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 12, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,776][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 12, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0.,
        0., 0., 1., 1., 1., 0., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,777][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 12, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0.,
        0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,777][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 12, the cut list of layer 3 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0.,
        0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,777][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 12, the cut list of layer 4 is 
tensor([0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0.,
        0., 0., 0., 1., 0., 0., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,777][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 12, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 0., 0., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,777][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 12, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0.,
        1., 1., 1., 1., 0., 0., 1., 0., 1., 1., 1.])
[2024-07-25 09:01:48,777][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 12, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1.,
        1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,778][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 12, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,778][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 12, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,778][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 12, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,778][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 13, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 1.,
        1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,778][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 13, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1.,
        1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1.])
[2024-07-25 09:01:48,778][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 13, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,778][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 13, the cut list of layer 3 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,779][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 13, the cut list of layer 4 is 
tensor([0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0.,
        0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 1.])
[2024-07-25 09:01:48,779][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 13, the cut list of layer 5 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1.])
[2024-07-25 09:01:48,779][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 13, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,779][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 13, the cut list of layer 7 is 
tensor([0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,779][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 13, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,779][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 13, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,779][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 13, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,780][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 14, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,780][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 14, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,780][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 14, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,780][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 14, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,780][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 14, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,781][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 14, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,781][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 14, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,781][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 14, the cut list of layer 7 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,781][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 14, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,781][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 14, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,781][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 14, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,781][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 15, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,782][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 15, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,782][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 15, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,782][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 15, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,782][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 15, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0.,
        0., 0., 1., 1., 1., 1., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,782][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 15, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,783][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 15, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,783][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 15, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,783][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 15, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,783][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 15, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,783][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 15, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,783][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 16, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,784][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 16, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,784][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 16, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,784][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 16, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,784][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 16, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,784][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 16, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,785][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 16, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,785][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 16, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,785][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 16, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,785][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 16, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,785][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 16, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,785][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 17, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,786][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 17, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,786][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 17, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,786][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 17, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,786][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 17, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,786][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 17, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,786][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 17, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,787][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 17, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,787][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 17, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,787][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 17, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,787][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 17, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,787][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 18, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,787][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 18, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,788][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 18, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,788][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 18, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,788][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 18, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,788][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 18, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,788][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 18, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,789][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 18, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,789][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 18, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,789][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 18, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,789][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 18, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,789][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 19, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,789][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 19, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,790][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 19, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,790][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 19, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,790][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 19, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,790][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 19, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,790][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 19, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,790][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 19, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,791][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 19, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,791][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 19, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,791][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 19, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,791][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 20, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,791][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 20, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,791][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 20, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,792][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 20, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,792][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 20, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,792][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 20, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,792][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 20, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,792][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 20, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,793][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 20, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,793][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 20, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,793][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 20, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,793][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 21, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,793][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 21, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,793][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 21, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,793][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 21, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,794][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 21, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,794][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 21, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,794][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 21, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,794][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 21, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,794][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 21, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,794][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 21, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,795][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 21, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,795][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 22, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,795][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 22, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,795][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 22, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,795][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 22, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,796][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 22, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,796][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 22, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,796][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 22, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,796][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 22, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,796][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 22, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,796][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 22, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,796][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 22, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,797][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 23, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,797][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 23, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,797][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 23, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,797][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 23, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0.,
        0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 1.])
[2024-07-25 09:01:48,797][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 23, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,798][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 23, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,798][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 23, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,798][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 23, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,798][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 23, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,798][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 23, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,798][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 23, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,799][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 24, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,799][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 24, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,799][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 24, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,799][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 24, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,799][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 24, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,800][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 24, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,800][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 24, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,800][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 24, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,800][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 24, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,800][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 24, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,800][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 24, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,800][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 25, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,801][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 25, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,801][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 25, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,801][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 25, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,801][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 25, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,801][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 25, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,802][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 25, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,802][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 25, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,802][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 25, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,802][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 25, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,802][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 25, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,802][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 26, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,802][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 26, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,802][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 26, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,803][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 26, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,803][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 26, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,803][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 26, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,803][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 26, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,803][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 26, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,803][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 26, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,803][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 26, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,803][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 26, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,803][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 27, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,803][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 27, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,803][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 27, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,804][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 27, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,804][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 27, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,804][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 27, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,804][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 27, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,804][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 27, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,804][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 27, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,804][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 27, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,804][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 27, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,804][satisfiability_discovery.py][line:102][INFO] ### for layer 8 and circuit 28, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,804][satisfiability_discovery.py][line:104][INFO] ### for layer 8 and circuit 28, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,804][satisfiability_discovery.py][line:105][INFO] ### for layer 8 and circuit 28, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,805][satisfiability_discovery.py][line:106][INFO] ### for layer 8 and circuit 28, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,805][satisfiability_discovery.py][line:107][INFO] ### for layer 8 and circuit 28, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,805][satisfiability_discovery.py][line:108][INFO] ### for layer 8 and circuit 28, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,805][satisfiability_discovery.py][line:109][INFO] ### for layer 8 and circuit 28, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,805][satisfiability_discovery.py][line:110][INFO] ### for layer 8 and circuit 28, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,805][satisfiability_discovery.py][line:111][INFO] ### for layer 8 and circuit 28, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,805][satisfiability_discovery.py][line:112][INFO] ### for layer 8 and circuit 28, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,805][satisfiability_discovery.py][line:113][INFO] ### for layer 8 and circuit 28, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,805][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 0, the cut list of layer 0 is 
tensor([1., 1., 0., 0., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0., 1.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,806][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 0, the cut list of layer 1 is 
tensor([0., 1., 1., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1.])
[2024-07-25 09:01:48,806][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 0, the cut list of layer 2 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,806][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 0, the cut list of layer 3 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,806][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 0, the cut list of layer 4 is 
tensor([0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0.,
        0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1.])
[2024-07-25 09:01:48,806][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 0, the cut list of layer 5 is 
tensor([0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0.,
        0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,806][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 0, the cut list of layer 6 is 
tensor([0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,806][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 0, the cut list of layer 7 is 
tensor([0., 1., 0., 0., 0., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.])
[2024-07-25 09:01:48,807][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 0, the cut list of layer 8 is 
tensor([0., 0., 1., 0., 0., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1.])
[2024-07-25 09:01:48,807][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 0, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,807][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 0, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,807][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 1, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,807][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 1, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,807][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 1, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,808][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 1, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,808][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 1, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,808][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 1, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,808][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 1, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,808][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 1, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,809][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 1, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,809][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 1, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,809][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 1, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,809][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 2, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,809][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 2, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,809][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 2, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,810][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 2, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,810][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 2, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,810][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 2, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,810][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 2, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,810][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 2, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,811][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 2, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,811][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 2, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,811][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 2, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,811][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 3, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,811][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 3, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,811][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 3, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,812][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 3, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,812][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 3, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,812][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 3, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,812][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 3, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,812][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 3, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,813][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 3, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,813][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 3, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,813][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 3, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,813][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 4, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,813][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 4, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,814][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 4, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,814][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 4, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,814][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 4, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,814][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 4, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,814][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 4, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,814][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 4, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,815][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 4, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,815][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 4, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,815][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 4, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,815][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 5, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,815][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 5, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,815][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 5, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,816][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 5, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,816][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 5, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,816][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 5, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,816][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 5, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,817][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 5, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,817][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 5, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,817][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 5, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,817][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 5, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,817][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 6, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,817][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 6, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,818][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 6, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,818][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 6, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,818][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 6, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,818][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 6, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,818][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 6, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,819][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 6, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,819][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 6, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,819][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 6, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,819][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 6, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,819][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 7, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,819][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 7, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,820][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 7, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,820][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 7, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,820][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 7, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,820][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 7, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,820][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 7, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,821][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 7, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,821][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 7, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,821][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 7, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,821][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 7, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,821][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 8, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,821][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 8, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,822][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 8, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,822][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 8, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,822][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 8, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,822][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 8, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,822][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 8, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,823][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 8, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,823][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 8, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,823][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 8, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,823][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 8, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,823][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 9, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,823][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 9, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,824][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 9, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,824][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 9, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,824][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 9, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,824][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 9, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,824][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 9, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,825][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 9, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,825][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 9, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,825][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 9, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,825][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 9, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,825][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 10, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,825][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 10, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1.])
[2024-07-25 09:01:48,826][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 10, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,826][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 10, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,826][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 10, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,826][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 10, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,826][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 10, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,827][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 10, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,827][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 10, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.,
        1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,827][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 10, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,827][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 10, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,827][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 11, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,827][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 11, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,828][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 11, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,828][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 11, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,828][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 11, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,828][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 11, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,828][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 11, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,829][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 11, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,829][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 11, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,829][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 11, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,829][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 11, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,829][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 12, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,829][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 12, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,830][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 12, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,830][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 12, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,830][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 12, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,830][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 12, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,830][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 12, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,831][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 12, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,831][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 12, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,831][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 12, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,831][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 12, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,831][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 13, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0.,
        1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,831][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 13, the cut list of layer 1 is 
tensor([0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0.,
        1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 1.])
[2024-07-25 09:01:48,832][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 13, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,832][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 13, the cut list of layer 3 is 
tensor([1., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,832][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 13, the cut list of layer 4 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,832][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 13, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0.,
        0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,832][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 13, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,832][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 13, the cut list of layer 7 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0.,
        0., 0., 1., 0., 1., 0., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,832][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 13, the cut list of layer 8 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1.,
        0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 1.])
[2024-07-25 09:01:48,833][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 13, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,833][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 13, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,833][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 14, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,833][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 14, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,833][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 14, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,833][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 14, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,834][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 14, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,834][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 14, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,834][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 14, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,834][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 14, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,834][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 14, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,835][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 14, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,835][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 14, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,835][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 15, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,835][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 15, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,835][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 15, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,835][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 15, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,836][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 15, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,836][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 15, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,836][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 15, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,836][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 15, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,837][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 15, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,837][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 15, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,837][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 15, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,837][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 16, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,837][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 16, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,837][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 16, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,838][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 16, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,838][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 16, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,838][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 16, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,838][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 16, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,838][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 16, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,838][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 16, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,839][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 16, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,839][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 16, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,839][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 17, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,839][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 17, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,839][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 17, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,840][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 17, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,840][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 17, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,840][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 17, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,840][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 17, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,840][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 17, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,841][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 17, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,841][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 17, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,841][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 17, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,841][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 18, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,841][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 18, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,841][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 18, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,842][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 18, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,842][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 18, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,842][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 18, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,842][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 18, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,842][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 18, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,843][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 18, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,843][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 18, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,843][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 18, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,843][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 19, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,843][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 19, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,843][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 19, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,844][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 19, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,844][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 19, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,844][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 19, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,844][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 19, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,844][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 19, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,845][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 19, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,845][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 19, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,845][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 19, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,845][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 20, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,845][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 20, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,845][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 20, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,846][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 20, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,846][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 20, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,846][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 20, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,846][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 20, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,846][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 20, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,847][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 20, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,847][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 20, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,847][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 20, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,847][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 21, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,847][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 21, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,847][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 21, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,848][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 21, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,848][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 21, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,848][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 21, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,848][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 21, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,848][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 21, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,849][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 21, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,849][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 21, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,849][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 21, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,849][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 22, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,849][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 22, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,849][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 22, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,850][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 22, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,850][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 22, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,850][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 22, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,850][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 22, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,850][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 22, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,851][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 22, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,851][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 22, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,851][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 22, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,851][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 23, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,851][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 23, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,851][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 23, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,852][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 23, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,852][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 23, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,852][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 23, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,852][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 23, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,852][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 23, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,853][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 23, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,853][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 23, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,853][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 23, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,853][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 24, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,853][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 24, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,853][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 24, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,854][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 24, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,854][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 24, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,854][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 24, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,854][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 24, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,854][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 24, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,855][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 24, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,855][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 24, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,855][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 24, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,855][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 25, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,855][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 25, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,855][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 25, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,856][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 25, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,856][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 25, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,856][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 25, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,856][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 25, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,856][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 25, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,857][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 25, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,857][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 25, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,857][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 25, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,857][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 26, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,857][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 26, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,857][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 26, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,857][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 26, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,857][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 26, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,857][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 26, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,857][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 26, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,858][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 26, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,858][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 26, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,858][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 26, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,858][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 26, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,858][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 27, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,858][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 27, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,858][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 27, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,858][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 27, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,858][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 27, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,858][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 27, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,858][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 27, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,859][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 27, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,859][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 27, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,859][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 27, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,859][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 27, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,859][satisfiability_discovery.py][line:102][INFO] ### for layer 9 and circuit 28, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,859][satisfiability_discovery.py][line:104][INFO] ### for layer 9 and circuit 28, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,859][satisfiability_discovery.py][line:105][INFO] ### for layer 9 and circuit 28, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,859][satisfiability_discovery.py][line:106][INFO] ### for layer 9 and circuit 28, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,859][satisfiability_discovery.py][line:107][INFO] ### for layer 9 and circuit 28, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,859][satisfiability_discovery.py][line:108][INFO] ### for layer 9 and circuit 28, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,859][satisfiability_discovery.py][line:109][INFO] ### for layer 9 and circuit 28, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,859][satisfiability_discovery.py][line:110][INFO] ### for layer 9 and circuit 28, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,860][satisfiability_discovery.py][line:111][INFO] ### for layer 9 and circuit 28, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,860][satisfiability_discovery.py][line:112][INFO] ### for layer 9 and circuit 28, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,860][satisfiability_discovery.py][line:113][INFO] ### for layer 9 and circuit 28, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,860][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 0, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 1., 1.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,860][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 0, the cut list of layer 1 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1.])
[2024-07-25 09:01:48,860][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 0, the cut list of layer 2 is 
tensor([0., 0., 0., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0., 0., 0.,
        1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,860][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 0, the cut list of layer 3 is 
tensor([0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,861][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 0, the cut list of layer 4 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0.,
        0., 1., 0., 1., 1., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,861][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 0, the cut list of layer 5 is 
tensor([0., 0., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,861][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 0, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 0., 1., 0., 1., 1., 0., 1., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.])
[2024-07-25 09:01:48,861][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 0, the cut list of layer 7 is 
tensor([0., 1., 1., 1., 0., 1., 1., 1., 1., 1., 0., 1., 0., 0., 0., 0., 0., 0.,
        1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,861][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 0, the cut list of layer 8 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1.,
        1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1.])
[2024-07-25 09:01:48,861][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 0, the cut list of layer 9 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0.,
        0., 0., 1., 1., 0., 1., 0., 0., 1., 0., 1.])
[2024-07-25 09:01:48,862][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 0, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,862][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 1, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,862][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 1, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,862][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 1, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,862][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 1, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,863][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 1, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,863][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 1, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,863][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 1, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,863][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 1, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,863][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 1, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,864][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 1, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,864][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 1, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,864][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 2, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,864][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 2, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,864][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 2, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,864][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 2, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,865][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 2, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,865][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 2, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,865][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 2, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,865][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 2, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,865][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 2, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,866][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 2, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,866][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 2, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,866][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 3, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,866][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 3, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,866][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 3, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,867][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 3, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,867][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 3, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,867][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 3, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,867][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 3, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,867][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 3, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,868][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 3, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,868][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 3, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,868][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 3, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,868][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 4, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,868][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 4, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,869][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 4, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,869][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 4, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,869][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 4, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,869][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 4, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,869][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 4, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,870][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 4, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,870][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 4, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,870][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 4, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,870][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 4, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,870][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 5, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,870][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 5, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,871][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 5, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,871][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 5, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,871][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 5, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,871][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 5, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,871][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 5, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,872][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 5, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,872][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 5, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,872][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 5, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,872][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 5, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,872][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 6, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,873][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 6, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,873][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 6, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,873][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 6, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,873][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 6, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,873][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 6, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,874][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 6, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,874][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 6, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,874][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 6, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,874][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 6, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,874][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 6, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,874][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 7, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,875][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 7, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,875][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 7, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,875][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 7, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,875][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 7, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,875][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 7, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,876][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 7, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,876][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 7, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,876][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 7, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,876][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 7, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,876][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 7, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,877][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 8, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,877][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 8, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,877][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 8, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,877][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 8, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,877][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 8, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,878][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 8, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,878][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 8, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,878][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 8, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,878][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 8, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,878][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 8, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,879][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 8, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,879][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 9, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,879][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 9, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,879][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 9, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,879][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 9, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,880][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 9, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,880][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 9, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,880][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 9, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,880][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 9, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,880][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 9, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,881][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 9, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,881][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 9, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,881][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 10, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,881][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 10, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,881][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 10, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,882][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 10, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,882][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 10, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,882][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 10, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,882][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 10, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,882][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 10, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,883][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 10, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,883][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 10, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,883][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 10, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,883][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 11, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,883][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 11, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,883][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 11, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,884][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 11, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,884][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 11, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,884][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 11, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,884][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 11, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,884][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 11, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,885][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 11, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,885][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 11, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,885][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 11, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,885][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 12, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,885][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 12, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,886][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 12, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,886][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 12, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,886][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 12, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,886][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 12, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,886][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 12, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,887][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 12, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,887][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 12, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,887][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 12, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,887][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 12, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,887][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 13, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,887][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 13, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1.,
        1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,888][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 13, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,888][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 13, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,888][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 13, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,888][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 13, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,888][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 13, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,889][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 13, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,889][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 13, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,889][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 13, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,889][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 13, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,889][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 14, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,890][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 14, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,890][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 14, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,890][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 14, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,890][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 14, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,890][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 14, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,891][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 14, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,891][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 14, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,891][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 14, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,891][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 14, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,891][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 14, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,891][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 15, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,892][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 15, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,892][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 15, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,892][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 15, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,892][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 15, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,892][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 15, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,893][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 15, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,893][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 15, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,893][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 15, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,893][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 15, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,893][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 15, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,894][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 16, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,894][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 16, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,894][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 16, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,894][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 16, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,894][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 16, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,895][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 16, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,895][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 16, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,895][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 16, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,895][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 16, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,895][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 16, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,895][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 16, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,896][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 17, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,896][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 17, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,896][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 17, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,896][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 17, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,897][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 17, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,897][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 17, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,897][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 17, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,897][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 17, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,897][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 17, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,898][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 17, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,898][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 17, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,898][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 18, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,898][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 18, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,898][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 18, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,898][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 18, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,899][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 18, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,899][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 18, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,899][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 18, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,899][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 18, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,899][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 18, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,900][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 18, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,900][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 18, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,900][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 19, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,900][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 19, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,900][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 19, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,901][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 19, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,901][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 19, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,901][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 19, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,901][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 19, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,901][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 19, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,902][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 19, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,902][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 19, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,902][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 19, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,902][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 20, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,902][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 20, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,902][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 20, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,903][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 20, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,903][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 20, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,903][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 20, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,903][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 20, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,903][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 20, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,904][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 20, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,904][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 20, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,904][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 20, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,904][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 21, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,904][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 21, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,905][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 21, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,905][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 21, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,905][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 21, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,905][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 21, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,905][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 21, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,906][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 21, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,906][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 21, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,906][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 21, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,906][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 21, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,906][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 22, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,906][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 22, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,907][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 22, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,907][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 22, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,907][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 22, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,907][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 22, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,907][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 22, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,908][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 22, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,908][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 22, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,908][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 22, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,908][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 22, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,908][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 23, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,909][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 23, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,909][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 23, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,909][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 23, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,909][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 23, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,909][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 23, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,910][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 23, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,910][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 23, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,910][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 23, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,910][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 23, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,910][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 23, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,911][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 24, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,911][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 24, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,911][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 24, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,911][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 24, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,911][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 24, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,912][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 24, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,912][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 24, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,912][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 24, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,912][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 24, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,912][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 24, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,912][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 24, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,913][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 25, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,913][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 25, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,913][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 25, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,913][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 25, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,913][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 25, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,914][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 25, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,914][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 25, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,914][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 25, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,914][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 25, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,914][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 25, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,915][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 25, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,915][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 26, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,915][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 26, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,915][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 26, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,915][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 26, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,915][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 26, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,915][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 26, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,915][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 26, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,915][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 26, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,915][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 26, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,915][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 26, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,916][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 26, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,916][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 27, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,916][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 27, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,916][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 27, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,916][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 27, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,916][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 27, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,916][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 27, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,916][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 27, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,916][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 27, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,916][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 27, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,916][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 27, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,917][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 27, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,917][satisfiability_discovery.py][line:102][INFO] ### for layer 10 and circuit 28, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,917][satisfiability_discovery.py][line:104][INFO] ### for layer 10 and circuit 28, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,917][satisfiability_discovery.py][line:105][INFO] ### for layer 10 and circuit 28, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,917][satisfiability_discovery.py][line:106][INFO] ### for layer 10 and circuit 28, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,917][satisfiability_discovery.py][line:107][INFO] ### for layer 10 and circuit 28, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,917][satisfiability_discovery.py][line:108][INFO] ### for layer 10 and circuit 28, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,917][satisfiability_discovery.py][line:109][INFO] ### for layer 10 and circuit 28, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,917][satisfiability_discovery.py][line:110][INFO] ### for layer 10 and circuit 28, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,917][satisfiability_discovery.py][line:111][INFO] ### for layer 10 and circuit 28, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,917][satisfiability_discovery.py][line:112][INFO] ### for layer 10 and circuit 28, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,918][satisfiability_discovery.py][line:113][INFO] ### for layer 10 and circuit 28, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,918][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 0, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0., 0.,
        1., 1., 1., 0., 0., 0., 0., 1., 0., 1., 1.])
[2024-07-25 09:01:48,918][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 0, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 0., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,918][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 0, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,918][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 0, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0.,
        0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 1.])
[2024-07-25 09:01:48,918][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 0, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 0., 0., 1., 0., 1., 1.])
[2024-07-25 09:01:48,919][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 0, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 0., 0., 0., 0.,
        0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,919][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 0, the cut list of layer 6 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0.,
        0., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,919][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 0, the cut list of layer 7 is 
tensor([0., 1., 1., 0., 1., 1., 1., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 0.,
        0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,919][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 0, the cut list of layer 8 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 1.,
        1., 1., 0., 0., 1., 1., 0., 1., 0., 1., 1.])
[2024-07-25 09:01:48,919][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 0, the cut list of layer 9 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1., 0.,
        1., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1.])
[2024-07-25 09:01:48,919][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 0, the cut list of layer 10 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0.,
        0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1.])
[2024-07-25 09:01:48,920][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 1, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,920][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 1, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,920][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 1, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,920][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 1, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,921][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 1, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,921][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 1, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,921][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 1, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,921][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 1, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,921][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 1, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,921][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 1, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,922][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 1, the cut list of layer 10 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,922][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 2, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,922][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 2, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,922][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 2, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,923][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 2, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,923][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 2, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,923][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 2, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,923][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 2, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,923][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 2, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,924][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 2, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,924][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 2, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,924][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 2, the cut list of layer 10 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,924][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 3, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,924][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 3, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,925][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 3, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,925][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 3, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,925][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 3, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,925][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 3, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,925][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 3, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,926][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 3, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,926][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 3, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,926][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 3, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,926][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 3, the cut list of layer 10 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,926][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 4, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,927][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 4, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,927][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 4, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,927][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 4, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,927][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 4, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,927][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 4, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,928][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 4, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,928][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 4, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,928][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 4, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,928][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 4, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,928][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 4, the cut list of layer 10 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,929][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 5, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,929][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 5, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,929][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 5, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,929][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 5, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,929][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 5, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,930][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 5, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,930][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 5, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,930][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 5, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,930][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 5, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,930][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 5, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,931][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 5, the cut list of layer 10 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,931][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 6, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,931][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 6, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,931][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 6, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,931][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 6, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,932][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 6, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,932][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 6, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,932][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 6, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,932][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 6, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,932][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 6, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,933][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 6, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,933][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 6, the cut list of layer 10 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,933][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 7, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,933][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 7, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,933][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 7, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,934][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 7, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,934][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 7, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,934][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 7, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,934][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 7, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,934][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 7, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,935][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 7, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,935][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 7, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,935][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 7, the cut list of layer 10 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,935][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 8, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,935][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 8, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,936][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 8, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,936][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 8, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,936][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 8, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,936][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 8, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,936][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 8, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,937][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 8, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,937][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 8, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,937][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 8, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,937][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 8, the cut list of layer 10 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,937][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 9, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,938][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 9, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.,
        1., 1., 0., 1., 0., 0., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,938][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 9, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,938][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 9, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,938][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 9, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,938][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 9, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,939][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 9, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,939][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 9, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,939][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 9, the cut list of layer 8 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,939][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 9, the cut list of layer 9 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,939][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 9, the cut list of layer 10 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,940][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 10, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 0., 1., 0., 1., 1., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,940][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 10, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,940][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 10, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,940][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 10, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,940][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 10, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,941][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 10, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,941][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 10, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,941][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 10, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,941][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 10, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,941][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 10, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        0., 1., 1., 1., 0., 1., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,942][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 10, the cut list of layer 10 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,942][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 11, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,942][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 11, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,942][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 11, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,943][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 11, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,943][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 11, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,943][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 11, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,943][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 11, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,943][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 11, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,943][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 11, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,944][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 11, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 0., 1., 0., 1., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,944][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 11, the cut list of layer 10 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,944][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 12, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 0., 1.,
        1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,944][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 12, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,944][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 12, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1.])
[2024-07-25 09:01:48,945][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 12, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,945][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 12, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,945][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 12, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,945][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 12, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        0., 1., 1., 1., 0., 0., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,945][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 12, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,946][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 12, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,946][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 12, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 0., 0.,
        0., 0., 0., 1., 0., 1., 1., 0., 1., 1., 1.])
[2024-07-25 09:01:48,946][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 12, the cut list of layer 10 is 
tensor([0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1.,
        0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 1.])
[2024-07-25 09:01:48,946][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 13, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,946][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 13, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 0., 1.,
        1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,947][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 13, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        0., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,947][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 13, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 0., 1., 1., 0., 1., 1., 1.])
[2024-07-25 09:01:48,947][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 13, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,947][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 13, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,947][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 13, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,948][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 13, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,948][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 13, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,948][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 13, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.])
[2024-07-25 09:01:48,948][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 13, the cut list of layer 10 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 1., 0., 1., 1., 1., 1., 0., 1., 1., 1.])
[2024-07-25 09:01:48,948][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 14, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,949][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 14, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,949][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 14, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,949][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 14, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,949][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 14, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,949][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 14, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,950][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 14, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,950][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 14, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,950][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 14, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,950][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 14, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,950][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 14, the cut list of layer 10 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,951][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 15, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,951][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 15, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,951][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 15, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,951][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 15, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,951][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 15, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,952][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 15, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,952][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 15, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,952][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 15, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,952][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 15, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,952][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 15, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,953][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 15, the cut list of layer 10 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,953][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 16, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,953][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 16, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,953][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 16, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,953][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 16, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,954][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 16, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,954][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 16, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,954][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 16, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,954][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 16, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,954][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 16, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,955][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 16, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,955][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 16, the cut list of layer 10 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,955][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 17, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,955][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 17, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,956][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 17, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,956][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 17, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,956][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 17, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,956][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 17, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,956][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 17, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,957][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 17, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,957][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 17, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,957][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 17, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,957][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 17, the cut list of layer 10 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,957][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 18, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,958][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 18, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,958][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 18, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,958][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 18, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,958][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 18, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,958][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 18, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,958][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 18, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,959][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 18, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,959][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 18, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,959][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 18, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,959][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 18, the cut list of layer 10 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,960][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 19, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,960][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 19, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,960][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 19, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,960][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 19, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,960][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 19, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,961][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 19, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,961][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 19, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,961][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 19, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,961][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 19, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,961][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 19, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,962][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 19, the cut list of layer 10 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,962][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 20, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,962][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 20, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,962][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 20, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,962][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 20, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,963][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 20, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,963][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 20, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,963][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 20, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,963][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 20, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,963][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 20, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,964][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 20, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,964][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 20, the cut list of layer 10 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,964][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 21, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,964][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 21, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,964][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 21, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,965][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 21, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,965][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 21, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,965][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 21, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,965][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 21, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,965][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 21, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,966][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 21, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,966][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 21, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,966][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 21, the cut list of layer 10 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,966][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 22, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,966][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 22, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,967][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 22, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,967][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 22, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,967][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 22, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,967][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 22, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,967][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 22, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,968][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 22, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,968][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 22, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,968][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 22, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,968][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 22, the cut list of layer 10 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,968][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 23, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,969][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 23, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,969][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 23, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,969][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 23, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,969][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 23, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,969][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 23, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,970][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 23, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,970][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 23, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,970][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 23, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,970][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 23, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,970][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 23, the cut list of layer 10 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,971][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 24, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,971][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 24, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,971][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 24, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,971][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 24, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,971][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 24, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,972][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 24, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,972][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 24, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,972][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 24, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,972][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 24, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,972][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 24, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,973][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 24, the cut list of layer 10 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,973][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 25, the cut list of layer 0 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,973][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 25, the cut list of layer 1 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,973][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 25, the cut list of layer 2 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,973][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 25, the cut list of layer 3 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,974][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 25, the cut list of layer 4 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,974][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 25, the cut list of layer 5 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,974][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 25, the cut list of layer 6 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,974][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 25, the cut list of layer 7 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,974][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 25, the cut list of layer 8 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,975][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 25, the cut list of layer 9 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,975][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 25, the cut list of layer 10 is 
tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
        1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])
[2024-07-25 09:01:48,975][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 26, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,975][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 26, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,975][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 26, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,975][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 26, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,975][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 26, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,975][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 26, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,975][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 26, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,976][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 26, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,976][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 26, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,976][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 26, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,976][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 26, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,976][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 27, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,976][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 27, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,976][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 27, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,976][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 27, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,976][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 27, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,976][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 27, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,976][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 27, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,977][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 27, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,977][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 27, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,977][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 27, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,977][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 27, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,977][satisfiability_discovery.py][line:102][INFO] ### for layer 11 and circuit 28, the cut list of layer 0 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,977][satisfiability_discovery.py][line:104][INFO] ### for layer 11 and circuit 28, the cut list of layer 1 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,977][satisfiability_discovery.py][line:105][INFO] ### for layer 11 and circuit 28, the cut list of layer 2 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,977][satisfiability_discovery.py][line:106][INFO] ### for layer 11 and circuit 28, the cut list of layer 3 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,977][satisfiability_discovery.py][line:107][INFO] ### for layer 11 and circuit 28, the cut list of layer 4 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,977][satisfiability_discovery.py][line:108][INFO] ### for layer 11 and circuit 28, the cut list of layer 5 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,977][satisfiability_discovery.py][line:109][INFO] ### for layer 11 and circuit 28, the cut list of layer 6 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,978][satisfiability_discovery.py][line:110][INFO] ### for layer 11 and circuit 28, the cut list of layer 7 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,978][satisfiability_discovery.py][line:111][INFO] ### for layer 11 and circuit 28, the cut list of layer 8 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,978][satisfiability_discovery.py][line:112][INFO] ### for layer 11 and circuit 28, the cut list of layer 9 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
[2024-07-25 09:01:48,978][satisfiability_discovery.py][line:113][INFO] ### for layer 11 and circuit 28, the cut list of layer 10 is 
tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0.])
